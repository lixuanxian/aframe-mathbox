{"version":3,"sources":["stats.min.js","DeviceOrientationControls.js","FirstPersonControls.js","OrbitControls.js","TrackballControls.js","VRControls.js","stats.js","controls.js","cursor.js","fullscreen.js","vr.js","ui.js"],"names":[],"mappingsjolBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrfile":"threestrap-extra.js","sourcesContent":["// stats.js - http://github.com/mrdoob/stats.js\nTHREE.Stats=function(){var l=Date.now(),m=l,g=0,n=Infinity,o=0,h=0,p=Infinity,q=0,r=0,s=0,f=document.createElement(\"div\");f.id=\"stats\";f.addEventListener(\"mousedown\",function(b){b.preventDefault();t(++s%2)},!1);f.style.cssText=\"width:80px;opacity:0.9;cursor:pointer\";var a=document.createElement(\"div\");a.id=\"fps\";a.style.cssText=\"padding:0 0 3px 3px;text-align:left;background-color:#002\";f.appendChild(a);var i=document.createElement(\"div\");i.id=\"fpsText\";i.style.cssText=\"color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px\";\ni.innerHTML=\"FPS\";a.appendChild(i);var c=document.createElement(\"div\");c.id=\"fpsGraph\";c.style.cssText=\"position:relative;width:74px;height:30px;background-color:#0ff\";for(a.appendChild(c);74>c.children.length;){var j=document.createElement(\"span\");j.style.cssText=\"width:1px;height:30px;float:left;background-color:#113\";c.appendChild(j)}var d=document.createElement(\"div\");d.id=\"ms\";d.style.cssText=\"padding:0 0 3px 3px;text-align:left;background-color:#020;display:none\";f.appendChild(d);var k=document.createElement(\"div\");\nk.id=\"msText\";k.style.cssText=\"color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px\";k.innerHTML=\"MS\";d.appendChild(k);var e=document.createElement(\"div\");e.id=\"msGraph\";e.style.cssText=\"position:relative;width:74px;height:30px;background-color:#0f0\";for(d.appendChild(e);74>e.children.length;)j=document.createElement(\"span\"),j.style.cssText=\"width:1px;height:30px;float:left;background-color:#131\",e.appendChild(j);var t=function(b){s=b;switch(s){case 0:a.style.display=\n\"block\";d.style.display=\"none\";break;case 1:a.style.display=\"none\",d.style.display=\"block\"}};return{REVISION:11,domElement:f,setMode:t,begin:function(){l=Date.now()},end:function(){var b=Date.now();g=b-l;n=Math.min(n,g);o=Math.max(o,g);k.textContent=g+\" MS (\"+n+\"-\"+o+\")\";var a=Math.min(30,30-30*(g/200));e.appendChild(e.firstChild).style.height=a+\"px\";r++;b>m+1E3&&(h=Math.round(1E3*r/(b-m)),p=Math.min(p,h),q=Math.max(q,h),i.textContent=h+\" FPS (\"+p+\"-\"+q+\")\",a=Math.min(30,30-30*(h/100)),c.appendChild(c.firstChild).style.height=\na+\"px\",m=b,r=0);return b},update:function(){l=this.end()}}};\n","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\n\nTHREE.DeviceOrientationControls = function ( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\n\tthis.object.rotation.reorder( \"YXZ\" );\n\n\tthis.freeze = true;\n\n\tthis.deviceOrientation = {};\n\n\tthis.screenOrientation = 0;\n\n\tvar onDeviceOrientationChangeEvent = function ( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function () {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function () {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function ( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' );                       // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler );                               // orient the device\n\n\t\t\tquaternion.multiply( q1 );                                      // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) );    // adjust for screen orientation\n\n\t\t}\n\n\t}();\n\n\tthis.connect = function() {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.freeze = false;\n\n\t};\n\n\tthis.disconnect = function() {\n\n\t\tscope.freeze = true;\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t};\n\n\tthis.update = function () {\n\n\t\tif ( scope.freeze ) return;\n\n\t\tvar alpha  = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.alpha ) : 0; // Z\n\t\tvar beta   = scope.deviceOrientation.beta  ? THREE.Math.degToRad( scope.deviceOrientation.beta  ) : 0; // X'\n\t\tvar gamma  = scope.deviceOrientation.gamma ? THREE.Math.degToRad( scope.deviceOrientation.gamma ) : 0; // Y''\n\t\tvar orient = scope.screenOrientation       ? THREE.Math.degToRad( scope.screenOrientation       ) : 0; // O\n\n\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\n\t};\n\n};","/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author paulirish / http://paulirish.com/\n */\n\nTHREE.FirstPersonControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\tthis.target = new THREE.Vector3( 0, 0, 0 );\n\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\tthis.movementSpeed = 1.0;\n\tthis.lookSpeed = 0.005;\n\n\tthis.lookVertical = true;\n\tthis.autoForward = false;\n\t// this.invertVertical = false;\n\n\tthis.activeLook = true;\n\n\tthis.heightSpeed = false;\n\tthis.heightCoef = 1.0;\n\tthis.heightMin = 0.0;\n\tthis.heightMax = 1.0;\n\n\tthis.constrainVertical = false;\n\tthis.verticalMin = 0;\n\tthis.verticalMax = Math.PI;\n\n\tthis.autoSpeedFactor = 0.0;\n\n\tthis.mouseX = 0;\n\tthis.mouseY = 0;\n\n\tthis.lat = 0;\n\tthis.lon = 0;\n\tthis.phi = 0;\n\tthis.theta = 0;\n\n\tthis.moveForward = false;\n\tthis.moveBackward = false;\n\tthis.moveLeft = false;\n\tthis.moveRight = false;\n\tthis.freeze = false;\n\n\tthis.mouseDragOn = false;\n\n\tthis.viewHalfX = 0;\n\tthis.viewHalfY = 0;\n\n\tif ( this.domElement !== document ) {\n\n\t\tthis.domElement.setAttribute( 'tabindex', -1 );\n\n\t}\n\n\t//\n\n\tthis.handleResize = function () {\n\n\t\tif ( this.domElement === document ) {\n\n\t\t\tthis.viewHalfX = window.innerWidth / 2;\n\t\t\tthis.viewHalfY = window.innerHeight / 2;\n\n\t\t} else {\n\n\t\t\tthis.viewHalfX = this.domElement.offsetWidth / 2;\n\t\t\tthis.viewHalfY = this.domElement.offsetHeight / 2;\n\n\t\t}\n\n\t};\n\n\tthis.onMouseDown = function ( event ) {\n\n\t\tif ( this.domElement !== document ) {\n\n\t\t\tthis.domElement.focus();\n\n\t\t}\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( this.activeLook ) {\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0: this.moveForward = true; break;\n\t\t\t\tcase 2: this.moveBackward = true; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.mouseDragOn = true;\n\n\t};\n\n\tthis.onMouseUp = function ( event ) {\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( this.activeLook ) {\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0: this.moveForward = false; break;\n\t\t\t\tcase 2: this.moveBackward = false; break;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.mouseDragOn = false;\n\n\t};\n\n\tthis.onMouseMove = function ( event ) {\n\n\t\tif ( this.domElement === document ) {\n\n\t\t\tthis.mouseX = event.pageX - this.viewHalfX;\n\t\t\tthis.mouseY = event.pageY - this.viewHalfY;\n\n\t\t} else {\n\n\t\t\tthis.mouseX = event.pageX - this.domElement.offsetLeft - this.viewHalfX;\n\t\t\tthis.mouseY = event.pageY - this.domElement.offsetTop - this.viewHalfY;\n\n\t\t}\n\n\t};\n\n\tthis.onKeyDown = function ( event ) {\n\n\t\t//event.preventDefault();\n\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase 38: /*up*/\n\t\t\tcase 87: /*W*/ this.moveForward = true; break;\n\n\t\t\tcase 37: /*left*/\n\t\t\tcase 65: /*A*/ this.moveLeft = true; break;\n\n\t\t\tcase 40: /*down*/\n\t\t\tcase 83: /*S*/ this.moveBackward = true; break;\n\n\t\t\tcase 39: /*right*/\n\t\t\tcase 68: /*D*/ this.moveRight = true; break;\n\n\t\t\tcase 82: /*R*/ this.moveUp = true; break;\n\t\t\tcase 70: /*F*/ this.moveDown = true; break;\n\n\t\t\tcase 81: /*Q*/ this.freeze = !this.freeze; break;\n\n\t\t}\n\n\t};\n\n\tthis.onKeyUp = function ( event ) {\n\n\t\tswitch( event.keyCode ) {\n\n\t\t\tcase 38: /*up*/\n\t\t\tcase 87: /*W*/ this.moveForward = false; break;\n\n\t\t\tcase 37: /*left*/\n\t\t\tcase 65: /*A*/ this.moveLeft = false; break;\n\n\t\t\tcase 40: /*down*/\n\t\t\tcase 83: /*S*/ this.moveBackward = false; break;\n\n\t\t\tcase 39: /*right*/\n\t\t\tcase 68: /*D*/ this.moveRight = false; break;\n\n\t\t\tcase 82: /*R*/ this.moveUp = false; break;\n\t\t\tcase 70: /*F*/ this.moveDown = false; break;\n\n\t\t}\n\n\t};\n\n\tthis.update = function( delta ) {\n\n\t\tif ( this.freeze ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.heightSpeed ) {\n\n\t\t\tvar y = THREE.Math.clamp( this.object.position.y, this.heightMin, this.heightMax );\n\t\t\tvar heightDelta = y - this.heightMin;\n\n\t\t\tthis.autoSpeedFactor = delta * ( heightDelta * this.heightCoef );\n\n\t\t} else {\n\n\t\t\tthis.autoSpeedFactor = 0.0;\n\n\t\t}\n\n\t\tvar actualMoveSpeed = delta * this.movementSpeed;\n\n\t\tif ( this.moveForward || ( this.autoForward && !this.moveBackward ) ) this.object.translateZ( - ( actualMoveSpeed + this.autoSpeedFactor ) );\n\t\tif ( this.moveBackward ) this.object.translateZ( actualMoveSpeed );\n\n\t\tif ( this.moveLeft ) this.object.translateX( - actualMoveSpeed );\n\t\tif ( this.moveRight ) this.object.translateX( actualMoveSpeed );\n\n\t\tif ( this.moveUp ) this.object.translateY( actualMoveSpeed );\n\t\tif ( this.moveDown ) this.object.translateY( - actualMoveSpeed );\n\n\t\tvar actualLookSpeed = delta * this.lookSpeed;\n\n\t\tif ( !this.activeLook ) {\n\n\t\t\tactualLookSpeed = 0;\n\n\t\t}\n\n\t\tvar verticalLookRatio = 1;\n\n\t\tif ( this.constrainVertical ) {\n\n\t\t\tverticalLookRatio = Math.PI / ( this.verticalMax - this.verticalMin );\n\n\t\t}\n\n\t\tthis.lon += this.mouseX * actualLookSpeed;\n\t\tif( this.lookVertical ) this.lat -= this.mouseY * actualLookSpeed * verticalLookRatio;\n\n\t\tthis.lat = Math.max( - 85, Math.min( 85, this.lat ) );\n\t\tthis.phi = THREE.Math.degToRad( 90 - this.lat );\n\n\t\tthis.theta = THREE.Math.degToRad( this.lon );\n\n\t\tif ( this.constrainVertical ) {\n\n\t\t\tthis.phi = THREE.Math.mapLinear( this.phi, 0, Math.PI, this.verticalMin, this.verticalMax );\n\n\t\t}\n\n\t\tvar targetPosition = this.target,\n\t\t\tposition = this.object.position;\n\n\t\ttargetPosition.x = position.x + 100 * Math.sin( this.phi ) * Math.cos( this.theta );\n\t\ttargetPosition.y = position.y + 100 * Math.cos( this.phi );\n\t\ttargetPosition.z = position.z + 100 * Math.sin( this.phi ) * Math.sin( this.theta );\n\n\t\tthis.object.lookAt( targetPosition );\n\n\t};\n\n\n\tthis.domElement.addEventListener( 'contextmenu', function ( event ) { event.preventDefault(); }, false );\n\n\tthis.domElement.addEventListener( 'mousemove', bind( this, this.onMouseMove ), false );\n\tthis.domElement.addEventListener( 'mousedown', bind( this, this.onMouseDown ), false );\n\tthis.domElement.addEventListener( 'mouseup', bind( this, this.onMouseUp ), false );\n\tthis.domElement.addEventListener( 'keydown', bind( this, this.onKeyDown ), false );\n\tthis.domElement.addEventListener( 'keyup', bind( this, this.onKeyUp ), false );\n\n\tfunction bind( scope, fn ) {\n\n\t\treturn function () {\n\n\t\t\tfn.apply( scope, arguments );\n\n\t\t};\n\n\t};\n\n\tthis.handleResize();\n\n};\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author unconed / https://github.com/unconed\n */\n/*global THREE, console */\n\n// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n// supported.\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n//\n// This is a drop-in replacement for (most) TrackballControls used in examples.\n// That is, include this js file and wherever you see:\n//      controls = new THREE.TrackballControls( camera );\n//      controls.target.z = 150;\n// Simple substitute \"OrbitControls\" and the control should work as-is.\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n  this.object = object;\n  this.domElement = ( domElement !== undefined ) ? domElement : document;\n\n  // API\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the control orbits around\n  // and where it pans with respect to.\n  this.target = new THREE.Vector3();\n\n  // center is old, deprecated; use \"target\" instead\n  this.center = this.target;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for\n  // backwards compatibility\n  this.noZoom = false;\n  this.zoomSpeed = 1.0;\n\n  // Limits to how far you can dolly in and out\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // Set to true to disable this control\n  this.noRotate = false;\n  this.rotateSpeed = 1.0;\n\n  // Set to true to disable this control\n  this.noPan = false;\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // Set to true to disable use of the keys\n  this.noKeys = false;\n\n  // The four arrow keys\n  this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  ////////////\n  // internals\n\n  var scope = this;\n\n  var EPS = 0.000001;\n\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n  var panOffset = new THREE.Vector3();\n\n  var offset = new THREE.Vector3();\n\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  var phiDelta = 0;\n  var thetaDelta = 0;\n  var scale = 1;\n  var pan = new THREE.Vector3();\n\n  var lastPosition = new THREE.Vector3();\n\n  var STATE = { NONE : -1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n  var state = STATE.NONE;\n\n  // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n\n  // so camera.up is the orbit axis\n\n  var quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n  var quatInverse = quat.clone().inverse();\n\n  // events\n\n  var changeEvent = { type: 'change' };\n  var startEvent = { type: 'start'};\n  var endEvent = { type: 'end'};\n\n  this.rotateLeft = function ( angle ) {\n\n    if ( angle === undefined ) {\n\n      angle = getAutoRotationAngle();\n\n    }\n\n    thetaDelta -= angle;\n\n  };\n\n  this.rotateUp = function ( angle ) {\n\n    if ( angle === undefined ) {\n\n      angle = getAutoRotationAngle();\n\n    }\n\n    phiDelta -= angle;\n\n  };\n\n  // pass in distance in world space to move left\n  this.panLeft = function ( distance ) {\n\n    var te = this.object.matrix.elements;\n\n    // get X column of matrix\n    panOffset.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n    panOffset.multiplyScalar( - distance );\n\n    pan.add( panOffset );\n\n  };\n\n  // pass in distance in world space to move up\n  this.panUp = function ( distance ) {\n\n    var te = this.object.matrix.elements;\n\n    // get Y column of matrix\n    panOffset.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n    panOffset.multiplyScalar( distance );\n\n    pan.add( panOffset );\n\n  };\n\n  // pass in x,y of change desired in pixel space,\n  // right and down are positive\n  this.pan = function ( deltaX, deltaY ) {\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    if ( scope.object.fov !== undefined ) {\n\n      // perspective\n      var position = scope.object.position;\n      var offset = position.clone().sub( scope.target );\n      var targetDistance = offset.length();\n\n      // half of the fov is center to top of screen\n      targetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n      // we actually don't use screenWidth, since perspective camera is fixed to screen height\n      scope.panLeft( 2 * deltaX * targetDistance / element.clientHeight );\n      scope.panUp( 2 * deltaY * targetDistance / element.clientHeight );\n\n    } else if ( scope.object.top !== undefined ) {\n\n      // orthographic\n      scope.panLeft( deltaX * (scope.object.right - scope.object.left) / element.clientWidth );\n      scope.panUp( deltaY * (scope.object.top - scope.object.bottom) / element.clientHeight );\n\n    } else {\n\n      // camera neither orthographic or perspective\n      console.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n    }\n\n  };\n\n  this.dollyIn = function ( dollyScale ) {\n\n    if ( dollyScale === undefined ) {\n\n      dollyScale = getZoomScale();\n\n    }\n\n    scale /= dollyScale;\n\n  };\n\n  this.dollyOut = function ( dollyScale ) {\n\n    if ( dollyScale === undefined ) {\n\n      dollyScale = getZoomScale();\n\n    }\n\n    scale *= dollyScale;\n\n  };\n\n  this.update = function () {\n\n    var position = this.object.position;\n\n    offset.copy( position ).sub( this.target );\n\n    // rotate offset to \"y-axis-is-up\" space\n    offset.applyQuaternion( quat );\n\n    // angle from z-axis around y-axis\n\n    var theta = Math.atan2( offset.x, offset.z );\n\n    // angle from y-axis\n\n    var phi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n    if ( this.autoRotate ) {\n\n      this.rotateLeft( getAutoRotationAngle() );\n\n    }\n\n    theta += thetaDelta;\n    phi += phiDelta;\n\n    // restrict phi to be between desired limits\n    phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n    // restrict phi to be betwee EPS and PI-EPS\n    phi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n    var radius = offset.length() * scale;\n\n    // restrict radius to be between desired limits\n    radius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n    // move target to panned location\n    this.target.add( pan );\n\n    offset.x = radius * Math.sin( phi ) * Math.sin( theta );\n    offset.y = radius * Math.cos( phi );\n    offset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n    // rotate offset back to \"camera-up-vector-is-up\" space\n    offset.applyQuaternion( quatInverse );\n\n    position.copy( this.target ).add( offset );\n\n    this.object.lookAt( this.target );\n\n    thetaDelta = 0;\n    phiDelta = 0;\n    scale = 1;\n    pan.set( 0, 0, 0 );\n\n    if ( lastPosition.distanceToSquared( this.object.position ) > EPS ) {\n\n      this.dispatchEvent( changeEvent );\n\n      lastPosition.copy( this.object.position );\n\n    }\n\n  };\n\n\n  this.reset = function () {\n\n    state = STATE.NONE;\n\n    this.target.copy( this.target0 );\n    this.object.position.copy( this.position0 );\n\n    this.update();\n\n  };\n\n  function getAutoRotationAngle() {\n\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n  }\n\n  function getZoomScale() {\n\n    return Math.pow( 0.95, scope.zoomSpeed );\n\n  }\n\n  function onMouseDown( event ) {\n\n    if ( scope.enabled === false ) return;\n    event.preventDefault();\n\n    if ( event.button === 0 ) {\n      if ( scope.noRotate === true ) return;\n\n      state = STATE.ROTATE;\n\n      rotateStart.set( event.clientX, event.clientY );\n\n    } else if ( event.button === 1 ) {\n      if ( scope.noZoom === true ) return;\n\n      state = STATE.DOLLY;\n\n      dollyStart.set( event.clientX, event.clientY );\n\n    } else if ( event.button === 2 ) {\n      if ( scope.noPan === true ) return;\n\n      state = STATE.PAN;\n\n      panStart.set( event.clientX, event.clientY );\n\n    }\n\n    document.documentElement.addEventListener( 'mousemove', onMouseMove, false );\n    document.documentElement.addEventListener( 'mouseup', onMouseUp, false );\n    scope.dispatchEvent( startEvent );\n\n  }\n\n  function onMouseMove( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    event.preventDefault();\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    if ( state === STATE.ROTATE ) {\n\n      if ( scope.noRotate === true ) return;\n\n      rotateEnd.set( event.clientX, event.clientY );\n      rotateDelta.subVectors( rotateEnd, rotateStart );\n\n      // rotating across whole screen goes 360 degrees around\n      scope.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      scope.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n      rotateStart.copy( rotateEnd );\n\n    } else if ( state === STATE.DOLLY ) {\n\n      if ( scope.noZoom === true ) return;\n\n      dollyEnd.set( event.clientX, event.clientY );\n      dollyDelta.subVectors( dollyEnd, dollyStart );\n\n      if ( dollyDelta.y > 0 ) {\n\n        scope.dollyIn();\n\n      } else {\n\n        scope.dollyOut();\n\n      }\n\n      dollyStart.copy( dollyEnd );\n\n    } else if ( state === STATE.PAN ) {\n\n      if ( scope.noPan === true ) return;\n\n      panEnd.set( event.clientX, event.clientY );\n      panDelta.subVectors( panEnd, panStart );\n\n      scope.pan( panDelta.x, panDelta.y );\n\n      panStart.copy( panEnd );\n\n    }\n\n    scope.update();\n\n  }\n\n  function onMouseUp( /* event */ ) {\n\n    if ( scope.enabled === false ) return;\n\n    document.documentElement.removeEventListener( 'mousemove', onMouseMove, false );\n    document.documentElement.removeEventListener( 'mouseup', onMouseUp, false );\n    scope.dispatchEvent( endEvent );\n    state = STATE.NONE;\n\n  }\n\n  function onMouseWheel( event ) {\n\n    if ( scope.enabled === false || scope.noZoom === true ) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    var delta = 0;\n\n    if ( event.wheelDelta !== undefined ) { // WebKit / Opera / Explorer 9\n\n      delta = event.wheelDelta;\n\n    } else if ( event.detail !== undefined ) { // Firefox\n\n      delta = - event.detail;\n\n    }\n\n    if ( delta > 0 ) {\n\n      scope.dollyOut();\n\n    } else {\n\n      scope.dollyIn();\n\n    }\n\n    scope.update();\n    scope.dispatchEvent( startEvent );\n    scope.dispatchEvent( endEvent );\n\n  }\n\n  function onKeyDown( event ) {\n\n    if ( scope.enabled === false || scope.noKeys === true || scope.noPan === true ) return;\n\n    switch ( event.keyCode ) {\n\n      case scope.keys.UP:\n        scope.pan( 0, scope.keyPanSpeed );\n        scope.update();\n        break;\n\n      case scope.keys.BOTTOM:\n        scope.pan( 0, - scope.keyPanSpeed );\n        scope.update();\n        break;\n\n      case scope.keys.LEFT:\n        scope.pan( scope.keyPanSpeed, 0 );\n        scope.update();\n        break;\n\n      case scope.keys.RIGHT:\n        scope.pan( - scope.keyPanSpeed, 0 );\n        scope.update();\n        break;\n\n    }\n\n  }\n\n  function touchstart( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    switch ( event.touches.length ) {\n\n      case 1: // one-fingered touch: rotate\n\n        if ( scope.noRotate === true ) return;\n\n        state = STATE.TOUCH_ROTATE;\n\n        rotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n        break;\n\n      case 2: // two-fingered touch: dolly\n\n        if ( scope.noZoom === true ) return;\n\n        state = STATE.TOUCH_DOLLY;\n\n        var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n        var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n        var distance = Math.sqrt( dx * dx + dy * dy );\n        dollyStart.set( 0, distance );\n        break;\n\n      case 3: // three-fingered touch: pan\n\n        if ( scope.noPan === true ) return;\n\n        state = STATE.TOUCH_PAN;\n\n        panStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n    scope.dispatchEvent( startEvent );\n\n  }\n\n  function touchmove( event ) {\n\n    if ( scope.enabled === false ) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    switch ( event.touches.length ) {\n\n      case 1: // one-fingered touch: rotate\n\n        if ( scope.noRotate === true ) return;\n        if ( state !== STATE.TOUCH_ROTATE ) return;\n\n        rotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n        rotateDelta.subVectors( rotateEnd, rotateStart );\n\n        // rotating across whole screen goes 360 degrees around\n        scope.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n        // rotating up and down along whole screen attempts to go 360, but limited to 180\n        scope.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n        rotateStart.copy( rotateEnd );\n\n        scope.update();\n        break;\n\n      case 2: // two-fingered touch: dolly\n\n        if ( scope.noZoom === true ) return;\n        if ( state !== STATE.TOUCH_DOLLY ) return;\n\n        var dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n        var dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n        var distance = Math.sqrt( dx * dx + dy * dy );\n\n        dollyEnd.set( 0, distance );\n        dollyDelta.subVectors( dollyEnd, dollyStart );\n\n        if ( dollyDelta.y > 0 ) {\n\n          scope.dollyOut();\n\n        } else {\n\n          scope.dollyIn();\n\n        }\n\n        dollyStart.copy( dollyEnd );\n\n        scope.update();\n        break;\n\n      case 3: // three-fingered touch: pan\n\n        if ( scope.noPan === true ) return;\n        if ( state !== STATE.TOUCH_PAN ) return;\n\n        panEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n        panDelta.subVectors( panEnd, panStart );\n\n        scope.pan( panDelta.x, panDelta.y );\n\n        panStart.copy( panEnd );\n\n        scope.update();\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n  }\n\n  function touchend( /* event */ ) {\n\n    if ( scope.enabled === false ) return;\n\n    scope.dispatchEvent( endEvent );\n    state = STATE.NONE;\n\n  }\n\n  this.domElement.addEventListener( 'contextmenu', function ( event ) { event.preventDefault(); }, false );\n  this.domElement.addEventListener( 'mousedown', onMouseDown, false );\n  this.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n  this.domElement.addEventListener( 'DOMMouseScroll', onMouseWheel, false ); // firefox\n\n  this.domElement.addEventListener( 'touchstart', touchstart, false );\n  this.domElement.addEventListener( 'touchend', touchend, false );\n  this.domElement.addEventListener( 'touchmove', touchmove, false );\n\n  window.addEventListener( 'keydown', onKeyDown, false );\n\n  // force an update at start\n  this.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n","/**\n * @author Eberhard Graether / http://egraether.com/\n * @author Mark Lundin \t/ http://mark-lundin.com\n * @author Simone Manini / http://daron1337.github.io\n * @author Luca Antiga \t/ http://lantiga.github.io\n */\n\nTHREE.TrackballControls = function ( object, domElement ) {\n\n\tvar _this = this;\n\tvar STATE = { NONE: -1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };\n\n\tthis.object = object;\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// API\n\n\tthis.enabled = true;\n\n\tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n\tthis.rotateSpeed = 1.0;\n\tthis.zoomSpeed = 1.2;\n\tthis.panSpeed = 0.3;\n\n\tthis.noRotate = false;\n\tthis.noZoom = false;\n\tthis.noPan = false;\n\n\tthis.staticMoving = false;\n\tthis.dynamicDampingFactor = 0.2;\n\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\tthis.keys = [ 65 /*A*/, 83 /*S*/, 68 /*D*/ ];\n\n\t// internals\n\n\tthis.target = new THREE.Vector3();\n\n\tvar EPS = 0.000001;\n\n\tvar lastPosition = new THREE.Vector3();\n\n\tvar _state = STATE.NONE,\n\t_prevState = STATE.NONE,\n\n\t_eye = new THREE.Vector3(),\n\n\t_movePrev = new THREE.Vector2(),\n\t_moveCurr = new THREE.Vector2(),\n\n\t_lastAxis = new THREE.Vector3(),\n\t_lastAngle = 0,\n\n\t_zoomStart = new THREE.Vector2(),\n\t_zoomEnd = new THREE.Vector2(),\n\n\t_touchZoomDistanceStart = 0,\n\t_touchZoomDistanceEnd = 0,\n\n\t_panStart = new THREE.Vector2(),\n\t_panEnd = new THREE.Vector2();\n\n\t// for reset\n\n\tthis.target0 = this.target.clone();\n\tthis.position0 = this.object.position.clone();\n\tthis.up0 = this.object.up.clone();\n\n\t// events\n\n\tvar changeEvent = { type: 'change' };\n\tvar startEvent = { type: 'start' };\n\tvar endEvent = { type: 'end' };\n\n\n\t// methods\n\n\tthis.handleResize = function () {\n\n\t\tif ( this.domElement === document ) {\n\n\t\t\tthis.screen.left = 0;\n\t\t\tthis.screen.top = 0;\n\t\t\tthis.screen.width = window.innerWidth;\n\t\t\tthis.screen.height = window.innerHeight;\n\n\t\t} else {\n\n\t\t\tvar box = this.domElement.getBoundingClientRect();\n\t\t\t// adjustments come from similar code in the jquery offset() function\n\t\t\tvar d = this.domElement.ownerDocument.documentElement;\n\t\t\tthis.screen.left = box.left + window.pageXOffset - d.clientLeft;\n\t\t\tthis.screen.top = box.top + window.pageYOffset - d.clientTop;\n\t\t\tthis.screen.width = box.width;\n\t\t\tthis.screen.height = box.height;\n\n\t\t}\n\n\t};\n\n\tthis.handleEvent = function ( event ) {\n\n\t\tif ( typeof this[ event.type ] == 'function' ) {\n\n\t\t\tthis[ event.type ]( event );\n\n\t\t}\n\n\t};\n\n\tvar getMouseOnScreen = ( function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function ( pageX, pageY ) {\n\n\t\t\tvector.set(\n\t\t\t\t( pageX - _this.screen.left ) / _this.screen.width,\n\t\t\t\t( pageY - _this.screen.top ) / _this.screen.height\n\t\t\t);\n\n\t\t\treturn vector;\n\n\t\t};\n\n\t}() );\n\n\tvar getMouseOnCircle = ( function () {\n\n\t\tvar vector = new THREE.Vector2();\n\n\t\treturn function ( pageX, pageY ) {\n\n\t\t\tvector.set(\n\t\t\t\t( ( pageX - _this.screen.width * 0.5 - _this.screen.left ) / ( _this.screen.width * 0.5 ) ),\n\t\t\t\t( ( _this.screen.height + 2 * ( _this.screen.top - pageY ) ) / _this.screen.width ) // screen.width intentional\n\t\t\t);\n\n\t\t\treturn vector;\n\t\t};\n\n\t}() );\n\n\tthis.rotateCamera = (function() {\n\n\t\tvar axis = new THREE.Vector3(),\n\t\t\tquaternion = new THREE.Quaternion(),\n\t\t\teyeDirection = new THREE.Vector3(),\n\t\t\tobjectUpDirection = new THREE.Vector3(),\n\t\t\tobjectSidewaysDirection = new THREE.Vector3(),\n\t\t\tmoveDirection = new THREE.Vector3(),\n\t\t\tangle;\n\n\t\treturn function () {\n\n\t\t\tmoveDirection.set( _moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0 );\n\t\t\tangle = moveDirection.length();\n\n\t\t\tif ( angle ) {\n\n\t\t\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\n\t\t\t\teyeDirection.copy( _eye ).normalize();\n\t\t\t\tobjectUpDirection.copy( _this.object.up ).normalize();\n\t\t\t\tobjectSidewaysDirection.crossVectors( objectUpDirection, eyeDirection ).normalize();\n\n\t\t\t\tobjectUpDirection.setLength( _moveCurr.y - _movePrev.y );\n\t\t\t\tobjectSidewaysDirection.setLength( _moveCurr.x - _movePrev.x );\n\n\t\t\t\tmoveDirection.copy( objectUpDirection.add( objectSidewaysDirection ) );\n\n\t\t\t\taxis.crossVectors( moveDirection, _eye ).normalize();\n\n\t\t\t\tangle *= _this.rotateSpeed;\n\t\t\t\tquaternion.setFromAxisAngle( axis, angle );\n\n\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t\t_lastAxis.copy( axis );\n\t\t\t\t_lastAngle = angle;\n\n\t\t\t}\n\n\t\t\telse if ( !_this.staticMoving && _lastAngle ) {\n\n\t\t\t\t_lastAngle *= Math.sqrt( 1.0 - _this.dynamicDampingFactor );\n\t\t\t\t_eye.copy( _this.object.position ).sub( _this.target );\n\t\t\t\tquaternion.setFromAxisAngle( _lastAxis, _lastAngle );\n\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t_this.object.up.applyQuaternion( quaternion );\n\n\t\t\t}\n\n\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t};\n\n\t}());\n\n\n\tthis.zoomCamera = function () {\n\n\t\tvar factor;\n\n\t\tif ( _state === STATE.TOUCH_ZOOM_PAN ) {\n\n\t\t\tfactor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n\t\t\t_eye.multiplyScalar( factor );\n\n\t\t} else {\n\n\t\t\tfactor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * _this.zoomSpeed;\n\n\t\t\tif ( factor !== 1.0 && factor > 0.0 ) {\n\n\t\t\t\t_eye.multiplyScalar( factor );\n\n\t\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.panCamera = (function() {\n\n\t\tvar mouseChange = new THREE.Vector2(),\n\t\t\tobjectUp = new THREE.Vector3(),\n\t\t\tpan = new THREE.Vector3();\n\n\t\treturn function () {\n\n\t\t\tmouseChange.copy( _panEnd ).sub( _panStart );\n\n\t\t\tif ( mouseChange.lengthSq() ) {\n\n\t\t\t\tmouseChange.multiplyScalar( _eye.length() * _this.panSpeed );\n\n\t\t\t\tpan.copy( _eye ).cross( _this.object.up ).setLength( mouseChange.x );\n\t\t\t\tpan.add( objectUp.copy( _this.object.up ).setLength( mouseChange.y ) );\n\n\t\t\t\t_this.object.position.add( pan );\n\t\t\t\t_this.target.add( pan );\n\n\t\t\t\tif ( _this.staticMoving ) {\n\n\t\t\t\t\t_panStart.copy( _panEnd );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( _this.dynamicDampingFactor ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\n\t}());\n\n\tthis.checkDistances = function () {\n\n\t\tif ( !_this.noZoom || !_this.noPan ) {\n\n\t\t\tif ( _eye.lengthSq() > _this.maxDistance * _this.maxDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.maxDistance ) );\n\n\t\t\t}\n\n\t\t\tif ( _eye.lengthSq() < _this.minDistance * _this.minDistance ) {\n\n\t\t\t\t_this.object.position.addVectors( _this.target, _eye.setLength( _this.minDistance ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.update = function () {\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\tif ( !_this.noRotate ) {\n\n\t\t\t_this.rotateCamera();\n\n\t\t}\n\n\t\tif ( !_this.noZoom ) {\n\n\t\t\t_this.zoomCamera();\n\n\t\t}\n\n\t\tif ( !_this.noPan ) {\n\n\t\t\t_this.panCamera();\n\n\t\t}\n\n\t\t_this.object.position.addVectors( _this.target, _eye );\n\n\t\t_this.checkDistances();\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\tif ( lastPosition.distanceToSquared( _this.object.position ) > EPS ) {\n\n\t\t\t_this.dispatchEvent( changeEvent );\n\n\t\t\tlastPosition.copy( _this.object.position );\n\n\t\t}\n\n\t};\n\n\tthis.reset = function () {\n\n\t\t_state = STATE.NONE;\n\t\t_prevState = STATE.NONE;\n\n\t\t_this.target.copy( _this.target0 );\n\t\t_this.object.position.copy( _this.position0 );\n\t\t_this.object.up.copy( _this.up0 );\n\n\t\t_eye.subVectors( _this.object.position, _this.target );\n\n\t\t_this.object.lookAt( _this.target );\n\n\t\t_this.dispatchEvent( changeEvent );\n\n\t\tlastPosition.copy( _this.object.position );\n\n\t};\n\n\t// listeners\n\n\tfunction keydown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\twindow.removeEventListener( 'keydown', keydown );\n\n\t\t_prevState = _state;\n\n\t\tif ( _state !== STATE.NONE ) {\n\n\t\t\treturn;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.ROTATE ] && !_this.noRotate ) {\n\n\t\t\t_state = STATE.ROTATE;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.ZOOM ] && !_this.noZoom ) {\n\n\t\t\t_state = STATE.ZOOM;\n\n\t\t} else if ( event.keyCode === _this.keys[ STATE.PAN ] && !_this.noPan ) {\n\n\t\t\t_state = STATE.PAN;\n\n\t\t}\n\n\t}\n\n\tfunction keyup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\t_state = _prevState;\n\n\t\twindow.addEventListener( 'keydown', keydown, false );\n\n\t}\n\n\tfunction mousedown( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.NONE ) {\n\n\t\t\t_state = event.button;\n\n\t\t}\n\n\t\tif ( _state === STATE.ROTATE && !_this.noRotate ) {\n\n\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\t\t\t_movePrev.copy(_moveCurr);\n\n\t\t} else if ( _state === STATE.ZOOM && !_this.noZoom ) {\n\n\t\t\t_zoomStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t_zoomEnd.copy(_zoomStart);\n\n\t\t} else if ( _state === STATE.PAN && !_this.noPan ) {\n\n\t\t\t_panStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t_panEnd.copy(_panStart);\n\n\t\t}\n\n\t\tdocument.addEventListener( 'mousemove', mousemove, false );\n\t\tdocument.addEventListener( 'mouseup', mouseup, false );\n\n\t\t_this.dispatchEvent( startEvent );\n\n\t}\n\n\tfunction mousemove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tif ( _state === STATE.ROTATE && !_this.noRotate ) {\n\n\t\t\t_movePrev.copy(_moveCurr);\n\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\n\t\t} else if ( _state === STATE.ZOOM && !_this.noZoom ) {\n\n\t\t\t_zoomEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t} else if ( _state === STATE.PAN && !_this.noPan ) {\n\n\t\t\t_panEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t}\n\n\t}\n\n\tfunction mouseup( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\t_state = STATE.NONE;\n\n\t\tdocument.removeEventListener( 'mousemove', mousemove );\n\t\tdocument.removeEventListener( 'mouseup', mouseup );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction mousewheel( event ) {\n\n\t\tif ( _this.enabled === false || _this.noZoom ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tvar delta = 0;\n\n\t\tif ( event.wheelDelta ) { // WebKit / Opera / Explorer 9\n\n\t\t\tdelta = event.wheelDelta / 40;\n\n\t\t} else if ( event.detail ) { // Firefox\n\n\t\t\tdelta = - event.detail / 3;\n\n\t\t}\n\n\t\t_zoomStart.y += delta * 0.01;\n\t\t_this.dispatchEvent( startEvent );\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tfunction touchstart( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\t_movePrev.copy(_moveCurr);\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panStart.copy( getMouseOnScreen( x, y ) );\n\t\t\t\t_panEnd.copy( _panStart );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t_state = STATE.NONE;\n\n\t\t}\n\t\t_this.dispatchEvent( startEvent );\n\n\n\t}\n\n\tfunction touchmove( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_movePrev.copy(_moveCurr);\n\t\t\t\t_moveCurr.copy( getMouseOnCircle(  event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t_state = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction touchend( event ) {\n\n\t\tif ( _this.enabled === false ) return;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\n\t\t\t\t_movePrev.copy(_moveCurr);\n\t\t\t\t_moveCurr.copy( getMouseOnCircle(  event.touches[ 0 ].pageX, event.touches[ 0 ].pageY ) );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\n\t\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd = 0;\n\n\t\t\t\tvar x = ( event.touches[ 0 ].pageX + event.touches[ 1 ].pageX ) / 2;\n\t\t\t\tvar y = ( event.touches[ 0 ].pageY + event.touches[ 1 ].pageY ) / 2;\n\t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );\n\t\t\t\t_panStart.copy( _panEnd );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t_state = STATE.NONE;\n\t\t_this.dispatchEvent( endEvent );\n\n\t}\n\n\tthis.domElement.addEventListener( 'contextmenu', function ( event ) { event.preventDefault(); }, false );\n\n\tthis.domElement.addEventListener( 'mousedown', mousedown, false );\n\n\tthis.domElement.addEventListener( 'mousewheel', mousewheel, false );\n\tthis.domElement.addEventListener( 'DOMMouseScroll', mousewheel, false ); // firefox\n\n\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\twindow.addEventListener( 'keydown', keydown, false );\n\twindow.addEventListener( 'keyup', keyup, false );\n\n\tthis.handleResize();\n\n\t// force an update at start\n\tthis.update();\n\n};\n\nTHREE.TrackballControls.prototype = Object.create( THREE.EventDispatcher.prototype );\nTHREE.TrackballControls.prototype.constructor = THREE.TrackballControls;\n","/**\n * VRControls\n *\n * Mixes vrstate with OrbitControls / DeviceOrientationControls\n\n * When real vrstate is supplied, it is used.\n * When empty vrstate {} is supplied, device orientation is used if supported, for Cardboard VR mode.\n * When no vrstate (null/undef) is supplied, orbit controls are used (mouse/touch), for regular interaction\n * \n * @author unconed / https://github.com/unconed\n */\n\n\nTHREE.VRControls = function (object, domElement) {\n  var EPSILON = 1e-5;\n\n  // Prepare real object and dummy object to swap out\n  var dummy   = this.dummy = new THREE.Object3D();\n  this.object = object;\n\n  // Two camera controls\n  this.device = new THREE.DeviceOrientationControls(dummy, domElement);\n  this.orbit  = new THREE.OrbitControls            (dummy, domElement);\n\n  // Ensure position/target are not identical\n  this.orbit.target.copy(object.position);\n  this.orbit.target.z += EPSILON;\n  this.orbit.rotateSpeed = -0.25;\n\n  // Check device orientation support\n  this.supported = false;\n  var callback = function (event) {\n    this.supported = event && event.alpha == +event.alpha;\n    window.removeEventListener('deviceorientation', callback, false);\n  }.bind(this);\n  window.addEventListener('deviceorientation', callback, false);\n}\n\nTHREE.VRControls.prototype.vr = function (vrstate) {\n  this.vrstate = vrstate;\n}\n\nTHREE.VRControls.prototype.update = function (delta) {\n  var freeze = false;\n\n  if (this.vrstate && this.vrstate.orientation) {\n    freeze = true;\n\n    this.object.quaternion.copy(this.vrstate.orientation);\n    this.object.position  .copy(this.vrstate.position);\n\n    this.device.object = this.dummy;\n    this.orbit .object = this.dummy;\n  }\n  else if (this.vrstate && this.supported) {\n    if (this.device.freeze) this.device.connect();\n\n    this.device.object = this.object;\n    this.orbit .object = this.dummy;\n\n    this.device.update(delta);\n  }\n  else {\n    freeze = true;\n\n    this.device.object = this.dummy;\n    this.orbit .object = this.object;\n\n    this.orbit.update(delta);\n  }\n\n  if (freeze && !this.device.freeze) this.device.disconnect();\n}","THREE.Bootstrap.registerPlugin('stats', {\n\n  listen: ['pre', 'post'],\n\n  install: function (three) {\n\n    var stats = this.stats = new THREE.Stats();\n    var style = stats.domElement.style;\n\n    style.position = 'absolute';\n    style.top = style.left = 0;\n    three.element.appendChild(stats.domElement);\n\n    three.stats = stats;\n  },\n\n  uninstall: function (three) {\n    document.body.removeChild(this.stats.domElement);\n\n    delete three.stats;\n  },\n\n  pre: function (event, three) {\n    this.stats.begin();\n  },\n\n  post: function (event, three) {\n    this.stats.end();\n  },\n\n});","THREE.Bootstrap.registerPlugin('controls', {\n\n  listen: ['update', 'resize', 'camera', 'this.change'],\n\n  defaults: {\n    klass: null,\n    parameters: {},\n  },\n\n  install: function (three) {\n    if (!this.options.klass) throw \"Must provide class for `controls.klass`\";\n\n    three.controls = null;\n\n    this._camera = three.camera || new THREE.PerspectiveCamera();\n    this.change(null, three);\n  },\n\n  uninstall: function (three) {\n    delete three.controls;\n  },\n\n  change: function (event, three) {\n    if (this.options.klass) {\n      if (!event || event.changes.klass) {\n        three.controls = new this.options.klass(this._camera, three.renderer.domElement);\n      }\n\n      _.extend(three.controls, this.options.parameters);\n    }\n    else {\n      three.controls = null;\n    }\n  },\n\n  update: function (event, three) {\n    var delta = three.Time && three.Time.delta || 1/60;\n    var vr = three.VR && three.VR.state;\n\n    if (three.controls.vr) three.controls.vr(vr);\n    three.controls.update(delta);\n  },\n\n  camera: function (event, three) {\n    three.controls.object = this._camera = event.camera;\n  },\n\n  resize: function (event, three) {\n    three.controls.handleResize && three.controls.handleResize();\n  },\n\n});","THREE.Bootstrap.registerPlugin('cursor', {\n\n  listen: ['update', 'this.change', 'install:change', 'uninstall:change', 'element.mousemove', 'vr'],\n\n  defaults: {\n    cursor: null,\n    hide: false,\n    timeout: 3,\n  },\n\n  install: function (three) {\n    this.timeout = this.options.timeout;\n    this.element = three.element;\n    this.change(null, three);\n  },\n\n  uninstall: function (three) {\n    delete three.controls;\n  },\n\n  change: function (event, three) {\n    this.applyCursor(three);\n  },\n\n  mousemove: function (event, three) {\n    if (this.options.hide) {\n      this.applyCursor(three);\n      this.timeout = +this.options.timeout || 0;\n    }\n  },\n\n  update: function (event, three) {\n    var delta = three.Time && three.Time.delta || 1/60;\n\n    if (this.options.hide) {\n      this.timeout -= delta;\n      if (this.timeout < 0) {\n        this.applyCursor(three, 'none');\n      }\n    }\n  },\n\n  vr: function (event, three) {\n    this.hide = event.active && !event.hmd.fake;\n    this.applyCursor(three);\n  },\n\n  applyCursor: function (three, cursor) {\n    var auto = three.controls ? 'move' : '';\n    cursor = cursor || this.options.cursor || auto;\n    if (this.hide) cursor = 'none';\n    if (this.cursor != cursor) {\n      this.element.style.cursor = cursor;\n    }\n  },\n\n});","THREE.Bootstrap.registerPlugin('fullscreen', {\n\n  defaults: {\n    key: 'f',\n  },\n\n  listen: ['ready', 'update'],\n\n  install: function (three) {\n    three.Fullscreen = this.api({\n      active: false,\n      toggle: this.toggle.bind(this),\n    }, three);\n  },\n\n  uninstall: function (three) {\n    delete three.Fullscreen\n  },\n\n  ready: function (event, three) {\n\n    document.body.addEventListener('keypress', function (event) {\n      if (this.options.key &&\n          event.charCode == this.options.key.charCodeAt(0)) {\n        this.toggle(three);\n      }\n    }.bind(this));\n\n    var changeHandler = function () {\n      var active = !!document.fullscreenElement       ||\n                   !!document.mozFullScreenElement    ||\n                   !!document.webkitFullscreenElement ||\n                   !!document.msFullscreenElement;\n      three.Fullscreen.active = this.active = active;\n      three.trigger({\n        type: 'fullscreen',\n        active: active,\n      });\n    }.bind(this);\n    document.addEventListener(\"fullscreenchange\", changeHandler, false);\n    document.addEventListener(\"webkitfullscreenchange\", changeHandler, false);\n    document.addEventListener(\"mozfullscreenchange\", changeHandler, false);\n  },\n\n  toggle: function (three) {\n    var canvas  = three.canvas;\n    var options = (three.VR && three.VR.active) ? { vrDisplay: three.VR.hmd } : {};\n\n    if (!this.active) {\n\n      if (canvas.requestFullScreen) {\n        canvas.requestFullScreen(options);\n      }\n      else if (canvas.msRequestFullScreen) {\n        canvas.msRequestFullscreen(options);\n      }\n      else if (canvas.webkitRequestFullscreen) {\n        canvas.webkitRequestFullscreen(options);\n      }\n      else if (canvas.mozRequestFullScreen) {\n        canvas.mozRequestFullScreen(options); // s vs S\n      }\n\n    }\n    else {\n\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      }\n      else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n      else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      }\n      else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen(); // s vs S\n      }\n\n    }\n  },\n\n});\n\n\n","/*\nVR sensor / HMD hookup.\n*/\nTHREE.Bootstrap.registerPlugin('vr', {\n\n  defaults: {\n    mode:   'auto',    // 'auto', '2d'\n    device:  null,\n    fov:     80,       // emulated FOV for fallback\n  },\n\n  listen: ['window.load', 'pre', 'render', 'resize', 'this.change'],\n\n  install: function (three) {\n    three.VR = this.api({\n      active:   false,\n      devices:  [],\n      hmd:      null,\n      sensor:   null,\n      renderer: null,\n      state:    null,\n    }, three);\n  },\n\n  uninstall: function (three) {\n    delete three.VR\n  },\n\n  mocks: function (three, fov, def) {\n    // Fake VR device for cardboard / desktop\n\n    // Interpuppilary distance\n    var ipd = 0.03;\n\n    // Symmetric eye FOVs (Cardboard style)\n    var getEyeTranslation = function (key) { return {left: {x: -ipd, y: 0, z: 0}, right: {x: ipd, y: 0, z: 0}}[key]; };\n    var getRecommendedEyeFieldOfView = function (key) {\n      var camera = three.camera;\n      var aspect = camera && camera.aspect || 16/9;\n      var fov2   = (fov || (camera && camera.fov || def)) / 2;\n      var fovX   = Math.atan(Math.tan(fov2 * Math.PI / 180) * aspect / 2) * 180 / Math.PI;\n      var fovY   = fov2;\n\n      return {\n        left: {\n          \"rightDegrees\": fovX,\n          \"leftDegrees\":  fovX,\n          \"downDegrees\":  fovY,\n          \"upDegrees\":    fovY,\n        },\n        right: {\n          \"rightDegrees\": fovX,\n          \"leftDegrees\":  fovX,\n          \"downDegrees\":  fovY,\n          \"upDegrees\":    fovY,\n        },\n      }[key];\n    };\n    // Will be replaced with orbit controls or device orientation controls by THREE.VRControls\n    var getState = function () { return {} };\n\n    return [\n      {\n        fake: true,\n        force: 1,\n        deviceId: 'emu',\n        deviceName: 'Emulated',\n        getEyeTranslation: getEyeTranslation,\n        getRecommendedEyeFieldOfView: getRecommendedEyeFieldOfView,\n      },\n      {\n        force: 2,\n        getState: getState,\n      },\n    ];\n  },\n\n  load: function (event, three) {\n    var callback = function (devs) {\n      this.callback(devs, three);\n    }.bind(this);\n\n    if (navigator.getVRDevices) {\n      navigator.getVRDevices().then(callback);\n    }\n    else if (navigator.mozGetVRDevices) {\n      navigator.mozGetVRDevices(callback);\n    }\n    else {\n      console.warn('No native VR support detected.');\n      callback(this.mocks(three, this.options.fov, this.defaults.fov), three);\n    }\n  },\n\n  callback: function (vrdevs, three) {\n    var hmd, sensor;\n\n    var HMD    = window.HMDVRDevice            || function () {};\n    var SENSOR = window.PositionSensorVRDevice || function () {};\n\n    // Export list of devices\n    vrdevs = three.VR.devices = vrdevs || three.VR.devices;\n\n    // Get HMD device\n    var deviceId = this.options.device;\n    for (var i = 0; i < vrdevs.length; ++i) {\n      var dev = vrdevs[i];\n      if (dev.force == 1 || (dev instanceof HMD)) {\n        if (deviceId && deviceId != dev.deviceId) continue;\n        hmd = dev;\n        break;\n      }\n    }\n\n    if (hmd) {\n      // Get sensor device\n      for (var i = 0; i < vrdevs.length; ++i) {\n        var dev = vrdevs[i];\n        if (dev.force == 2 || (dev instanceof SENSOR && dev.hardwareUnitId == hmd.hardwareUnitId)) {\n          sensor = dev;\n          break;\n        }\n      }\n\n      this.hookup(hmd, sensor, three);\n    }\n  },\n\n  hookup: function (hmd, sensor, three) {\n    if (!THREE.VRRenderer) console.log(\"THREE.VRRenderer not found\");\n    var klass = THREE.VRRenderer || function () {};\n\n    this.renderer = new klass(three.renderer, hmd);\n    this.hmd      = hmd;\n    this.sensor   = sensor;\n\n    three.VR.renderer = this.renderer;\n    three.VR.hmd      = hmd;\n    three.VR.sensor   = sensor;\n\n    console.log(\"THREE.VRRenderer\", hmd.deviceName);\n  },\n\n  change: function (event, three) {\n    if (event.changes.device) {\n      this.callback(null, three);\n    }\n    this.pre(event, three);\n  },\n\n  pre: function (event, three) {\n    var last = this.active;\n\n    // Global active flag\n    var active = this.active = this.renderer && this.options.mode != '2d';\n    three.VR.active = active;\n\n    // Load sensor state\n    if (active && this.sensor) {\n      var state = this.sensor.getState();\n      three.VR.state = state;\n    }\n    else {\n      three.VR.state = null;\n    }\n\n    // Notify if VR state changed\n    if (last != this.active) {\n      three.trigger({ type: 'vr', active: active, hmd: this.hmd, sensor: this.sensor });\n    }\n\n  },\n\n  resize: function (event, three) {\n    if (this.active) {\n      // Reinit HMD projection\n      this.renderer.initialize();\n    }\n  },\n\n  render: function (event, three) {\n    if (three.scene && three.camera) {\n      var renderer = this.active ? this.renderer : three.renderer;\n\n      if (this.last != renderer) {\n        if (renderer == three.renderer) {\n          // Cleanup leftover renderer state when swapping back to normal\n          var dpr    = renderer.getPixelRatio();\n          var width  = renderer.domElement.width / dpr;\n          var height = renderer.domElement.height / dpr;\n          renderer.enableScissorTest(false);\n          renderer.setViewport(0, 0, width, height);\n        }\n      }\n\n      this.last = renderer;\n\n      renderer.render(three.scene, three.camera);\n    }\n  },\n\n});\n\n","THREE.Bootstrap.registerPlugin('ui', {\n\n  defaults: {\n    theme: 'white',\n    style: '.threestrap-ui { position: absolute; bottom: 5px; right: 5px; float: left; }'+\n           '.threestrap-ui button { border: 0; background: none;'+\n           '  vertical-align: middle; font-weight: bold; } '+\n           '.threestrap-ui .glyphicon { top: 2px; font-weight: bold; } '+\n           '@media (max-width: 640px) { .threestrap-ui button { font-size: 120% } }'+\n           '.threestrap-white button { color: #fff; text-shadow: 0 1px 1px rgba(0, 0, 0, 1), '+\n                                                                   '0 1px 3px rgba(0, 0, 0, 1); }'+\n           '.threestrap-black button { color: #000; text-shadow: 0 0px 1px rgba(255, 255, 255, 1), '+\n                                                                '0 0px 2px rgba(255, 255, 255, 1), '+\n                                                                '0 0px 2px rgba(255, 255, 255, 1) }'\n  },\n\n  listen: ['fullscreen'],\n\n  markup: function (three, theme, style) {\n    var url = \"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap-glyphicons.css\";\n    if (location.href.match(/^file:\\/\\//)) url = 'http://' + url;\n\n    var buttons = [];\n\n    if (three.Fullscreen) {\n      buttons.push('<button class=\"fullscreen\" title=\"Full Screen\">'+\n         '<span class=\"glyphicon glyphicon-fullscreen\"></span>'+\n       '</button>');\n    }\n    if (three.VR) {\n      buttons.push('<button class=\"vr\" title=\"VR Headset\">VR</button>');\n    }\n\n    return '<style type=\"text/css\">@import url(\"' + url + '\"); '+ style + '</style>'+\n           '<div class=\"threestrap-ui threestrap-'+ theme + '\">'+ buttons.join(\"\\n\") + '</div>';\n  },\n\n  install: function (three) {\n    var ui = this.ui = document.createElement('div');\n    ui.innerHTML = this.markup(three, this.options.theme, this.options.style);\n    document.body.appendChild(ui);\n\n    var fullscreen = this.ui.fullscreen = ui.querySelector('button.fullscreen');\n    if (fullscreen) {\n      three.bind([ fullscreen, 'click:goFullscreen' ], this);\n    }\n\n    var vr = this.ui.vr = ui.querySelector('button.vr');\n    if (vr && three.VR) {\n      three.VR.set({ mode: '2d' });\n      three.bind([ vr, 'click:goVR' ], this);\n    }\n  },\n\n  uninstall: function (three) {\n    document.body.removeChild(ui);\n  },\n\n  fullscreen: function (event, three) {\n    this.ui.style.display = event.active ? 'none' : 'block';\n    if (!event.active) three.VR && three.VR.set({ mode: '2d' });\n  },\n\n  goFullscreen: function (event, three) {\n    if (three.Fullscreen) {\n      three.Fullscreen.toggle();\n    }\n  },\n\n  goVR: function (event, three) {\n    if (three.VR) {\n      three.VR.set({ mode: 'auto' });\n      three.Fullscreen.toggle();\n    }\n  },\n\n  uninstall: function (three) {\n    document.body.removeChild(this.ui);\n  },\n\n});"]}